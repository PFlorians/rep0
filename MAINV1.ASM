		TITLE ZADANIE1
		;DESCRIPTION
		;MIESTO PRE HLAVNY VYPIS ULOHU + MAKRA INKLUDOVAT
		;END OF DESCRIPTION
		;CONSTANTS HERE
		X EQU 0
		Y EQU 0
		;MAKRO NA VYPIS MENU
		MENU MACRO T1, T2, T3, T4
			MOV AH, 09H
			MOV DX, OFFSET T1
			INT 21H
			MOV DX, OFFSET T2
			INT 21H
			MOV DX, OFFSET T3
			INT 21H
			MOV DX, OFFSET T4
			INT 21H
		ENDM
		;VSEOBECNY PRINT NA BARS AKE VYPISY
		PRINT MACRO TXT
			MOV DX, OFFSET TXT
			MOV AH, 09H
			INT 21H
		ENDM
		PUTCHAR MACRO
			;EXISTUJE PREDPOKLAD, ZE PRI USERINPUT BOLO AL ULOZENE DO CL AKO BUFFER
			MOV DL, CL
			MOV AH, 02H
			INT 21H
		ENDM
		CLEAR MACRO
			MOV AH, 07H
			MOV AL, 0
			MOV BH, 10 ;NULU NECHAT LEN AK ZIADUCE NEPISAT NA PREDOSLE POZICIE
			MOV CH, 0
			MOV CL, 0
			MOV DH, 24	;RIADKY
			MOV DL, 80	;STLPCE
			INT 10H
		ENDM
		MOVESTART MACRO ;PRI ROZVINUTI BY NEMALO V DX BYT NIC CO TREBA VYPISAT
			MOV AH, 02H
			MOV BH, 0
			MOV DH, X	
			MOV DL, Y
			INT 10H
		ENDM
		USERINPUT MACRO
			MOV AH, 01H ;NACITA ZNAK ULOZI DO AL, PRIPADNE NECHAT 07H
			INT 21H
			MOV CL, AL	;CL POUZIJE AKO BUFFER PRE ULOZENIE ZNAKU, LEBO IDE ONTROLNY VYPIS
		ENDM
		SETFNAME MACRO
			MOV DX, OFFSET INP;+1B = POCET
			MOV SI, DX
		;AK TAM UZ PREDTYM COSI BOLO
		L1:	
			INC SI	;AK UZ SU TAM DATA TAK TREBA VYNULOVAT VSETKO CO TAM JE INAK NASTANE PROBLEM
			MOV BL, [SI]
			CMP BL, 0;DEFAULTNE BY TO MALO BYT VSETKO NULA
				JE NEW
			MOV BL, 0
			MOV [SI], BL
			JMP L1
		NEW:
			MOV AH, 0AH		;NACITANIE RETAZCA A PRIDANIE DOLARA PRE DEBUG, MENO SA DA HNED VYTLACIT
			INT 21H
			;start debug tmp 
			MOV SI, OFFSET POCET
			XOR DX, DX
			XOR AX, AX
			MOV DX, OFFSET POCET
			MOV AL, BYTE PTR[SI]
			ADD DX, AX
			MOV BX, DX
			MOV BYTE PTR[BX]+2, '$';toto je len na vypis
			;end debug tmp here
		ENDM
		PRINTENTER MACRO ;PROSTE VYTLAC ENTER
			MOV DX, OFFSET ENT
			MOV AH, 09H
			INT 21H
		ENDM
		BACKUPSTRING MACRO;PROCEDURA NA ZALOHOVANIE = VYTVORENIE KOPIE NAYVU SUBORU
			MOV SI, OFFSET POCET
			MOV DI, OFFSET FNAME ;SEM TO CHCEM KOPIROVAT
			XOR DX, DX
			XOR AX, AX
			MOV CL, BYTE PTR[SI]
			;ADD CL, 1;+2 TAM JE DOLAR
			INC SI;
		L2:	;VYNULOVAT AK UZ TAM NIECO JE
			MOV BL, [DI]
			CMP BL, 0;DEFAULTNE BY TO MALO BYT VSETKO NULA
				JE L3		;AK NULA TAK DALEJ
			MOV BL, 0		;DAJ NULU
			MOV [DI], BL	;ZMEN AJ V PAMATI
			JMP L2;REPEAT
		L3:
			MOV AL, BYTE PTR[SI]
			MOV BYTE PTR[DI], AL
			INC SI
			INC DI
			LOOPNE L3
		ENDM
		;MAKRO CITA AZ KYM V DANOM BUFFERI NENARAZI NA NULU
		;debugovacie makro
		PRINTUNTILZERO MACRO BUFF
			LEA SI, BUFF
			MOV AH, 02H
		L4:
			MOV DL, BYTE PTR[SI]
			CMP DL, 0
				JZ KON
			INT 21H
			INC SI;
			JMP L4
		KON:
		ENDM
		CLEARBUFFER MACRO BUFF
			LEA SI, BUFF
		L5:
			MOV DL, BYTE PTR[SI]
			CMP DL, 0
				JZ KONEC
			MOV BYTE PTR[SI], 00H;
			INC SI;
			JMP L5
		KONEC:
		ENDM
		FOPEN MACRO
			MOV AX, 3D00H
			;MOV AL, 02H ;OTVORIT AKO R/W MOD
			LEA DX, FNAME ;MENO SUBORU
			INT 21H
			MOV HANDLE, AX;ULOZIT AX DO HANDLE
		ENDM
		FCLOSE MACRO
			MOV BX, HANDLE
			MOV AH, 3EH
			INT 21H
		ENDM
		FREAD MACRO
		READ:
			MOV BX, HANDLE
			MOV CX, 190	;CITAJ SUBOR 
			LEA DX, BUFFER
			MOV AH, 3FH
			INT 21H
			
			CMP AX, 0
				JZ CLOSE
			
			;MOV DL, BUFFER
			;MOV AH, 02H
			;INT 21H
			PRINTUNTILZERO BUFFER
			CLEARBUFFER BUFFER
			JMP READ
		CLOSE:
			MOV BX, HANDLE
			MOV AH, 3EH
			INT 21H
			PRINTENTER
		ENDM
		STK SEGMENT STACK
			DW 64 DUP(?);
		STK ENDS
		SEGMENT DATA
			ENT DB 10, 13, '$'
			MENU1 DB 10, 13, 'A) ZADAT MENO SUBORU', 10, 13, '$'
			MENU2 DB 'B) VYPISAT OBSAH SUBORU', 10, 13, '$'
			MENU3 DB 'C) NACITAT RETAZEC A VYPISAT POCET VYSKYTOV', 10, 13, '$'
			MENU4 DB 'D) UKONCIT PROGRAM', 10, 13, '$'
			;DATOVA STRUKTURA PRE ULOZENIE VSTUPU NAZVU RETAZCA
			INP DB 100 
			POCET DB 0;REALNY POCET ZNAKOV V RETAZCI
				  DB 103 DUP(0);BUFFER VELKOSTI 100
			;DATA KDE JE ZALOZNY RETAZEC
			FNAME DB 103 DUP(0);
			;FILE HANDLE TEMPORARY STORAGE
			HANDLE DW ?  ;POZN. AX JE 16 BITOV
			;BUFFER PRE DATA ZO SUBORU
			BUFFER DB 200 DUP(0)
		DATA ENDS
		
		SEGMENT CODE
			ASSUME CS:CODE, DS:DATA, SS:STK
			;LOKALNE PROCEDURY ZATIAL TU
			FILENAME PROC
					SETFNAME
					CLEAR
					MOVESTART ;REALIZUJ PRESUN KURZORA NA PRVU MOZNU POZICIU
					BACKUPSTRING
					;print nazov suboru
					LEA DX, POCET[1]
					MOV AH, 09H
					INT 21H
					RET
					;JMP MAINLOOP
					;TMP SHOULD BE UNREACHABLE OTHER THAN AL, 44H
			FILENAME ENDP
			READFILE PROC
				FOPEN
				FREAD
				;FCLOSE
				RET
			READFILE ENDP
			START:
					MOV AX, SEG DATA
					MOV DS, AX
			MAINLOOP:
					MENU MENU1, MENU2, MENU3, MENU4
					USERINPUT	;BUDE BUFFROVAT DO CL
					PRINTENTER
					MOV AL, CL
					CMP AL, 41H
						JZ MENO
					CMP AL, 42H
						JZ FPRINT
					CMP AL, 43H
						JZ SUBS
					CMP AL, 44H
						JZ KONIEC
						JNE EL
			MENO:
				CALL FILENAME
				JMP MAINLOOP
			FPRINT:
				CALL READFILE
				JMP MAINLOOP
			SUBS:
					;SUBSTRING SEARCH HERE
			EL:		;NASTANE AK INY VSTUP
					CLEAR;POZOR AK SA TOTO VOLA PRED PUTCHAR TAK SA PREMAZE VSTUP V REGISTROCH
					MOVESTART 
					XOR AX, AX
					JMP MAINLOOP ;ZACAT OD ZACIATKU, TOTO TRVA DOKIAL NEZADA 'D'
			KONIEC:
					MOV AX, 4C00H;UKONCI PROGRAM
					INT 21H
		CODE ENDS
		END START
